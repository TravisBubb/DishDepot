@page "/auth/login"
@using BSS.DishDepot.Application.Dto
@using Blazored.SessionStorage
@using Microsoft.AspNetCore.Components.Authorization
@inject ApiClient ApiClient
@inject NavigationManager NavigationManager
@inject ISessionStorageService SessionStorage
@inject AuthenticationStateProvider AuthenticationStateProvider

<h3>Login</h3>

<EditForm class="new-blog-form" Model="@request" OnValidSubmit="HandleValidSubmit">
    <div class="form-group row">
        <label for="username" class="col-sm-2 col-form-label">Username</label>
        <div class="col-sm-10">
            <input type="text" @bind="request.Email" class=" form-control" id="username" placeholder="Username">
        </div>
    </div>
    <div class="form-group row">
        <label for="password" class="col-sm-2 col-form-label">Password</label>
        <div class="col-sm-10">
            <input type="password" @bind="request.Password" class="form-control" id="password"
                   placeholder="Password">
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-10">
            <button type="submit" class="btn btn-primary">Login</button>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-10">
            <a href="/auth/register" class="btn btn-secondary">New User? Register</a>
        </div>
    </div>
</EditForm>

@code {
    private AuthenticateUserRequest request = new AuthenticateUserRequest();

    private async void HandleValidSubmit()
    {
        var result = await ApiClient.Login(request);

        if (!result.IsSuccessful)
        {
            return;
        }

        await SessionStorage.SetItemAsync("access_token", result.Data!.Token);
        ((TokenAuthenticationStateProvider)AuthenticationStateProvider).AuthenticateUser(result.Data!.Token!);
        NavigationManager.NavigateTo("/");
    }
}